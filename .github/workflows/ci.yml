# ci.yml
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Enable Corepack for Yarn Berry support
      - name: Enable Corepack
        run: corepack enable

      # Setup Node.js with Yarn cache
      # PnP cache includes .yarn/cache and .pnp.* files
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      # Activate Yarn version from yarnPath in .yarnrc.yml
      - name: Activate Yarn
        run: corepack prepare yarn@stable --activate

      # Verify Yarn and PnP setup
      - name: Verify Yarn configuration
        run: |
          echo "=== Yarn version ==="
          yarn --version
          echo "=== Node linker mode ==="
          yarn config get nodeLinker
          echo "=== PnP mode ==="
          yarn config get pnpMode

      # Install dependencies with immutable lockfile
      # This ensures reproducible builds in CI
      - name: Install dependencies
        run: yarn install --immutable
        env:
          # Disable telemetry in CI
          YARN_ENABLE_TELEMETRY: '0'

      # Verify PnP installation
      - name: Verify PnP installation
        run: |
          echo "=== Checking .pnp.cjs ==="
          ls -lh .pnp.cjs
          echo "=== Checking .yarn/cache ==="
          ls -lh .yarn/cache | head -10
          echo "=== Verifying vite package ==="
          yarn run node -e "console.log(require.resolve('vite/package.json'))"
          echo "=== Verifying vitest package ==="
          yarn run node -e "console.log(require.resolve('vitest/package.json'))"

      # Run linting with PnP
      - name: Run ESLint
        run: yarn lint

      # Run TypeScript type checking
      - name: Run type check
        run: yarn tsc --noEmit

      # Run tests with Vitest under PnP
      - name: Run tests
        run: yarn test:run
        env:
          NODE_ENV: test
          CI: true
          FORCE_COLOR: '1'
        timeout-minutes: 10

      # Build application
      - name: Build application
        run: yarn build
        env:
          NODE_ENV: production

      # Upload artifacts on failure for debugging
      - name: Upload debug artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-debug-artifacts
          path: |
            .pnp.cjs
            .pnp.loader.mjs
            .yarnrc.yml
            yarn.lock
          retention-days: 3

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Activate Yarn
        run: corepack prepare yarn@stable --activate

      - name: Install dependencies
        run: yarn install --immutable
        env:
          YARN_ENABLE_TELEMETRY: '0'

      - name: Run tests with coverage
        run: yarn test:coverage
        env:
          NODE_ENV: test
          CI: true

      # Upload coverage report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: false
