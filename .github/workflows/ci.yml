name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # 일시적으로 캐시 비활성화
          # cache: 'yarn'

      - name: Set Yarn Version
        run: corepack prepare yarn@stable --activate

      # .yarnrc.yml 내용 확인 (디버깅용)
      - name: Check Yarn config
        run: |
          echo "=== .yarnrc.yml content ==="
          cat .yarnrc.yml || echo ".yarnrc.yml not found"
          echo "=== Yarn config ==="
          yarn config

      # 기존 Yarn 캐시 완전 제거
      - name: Clean Yarn cache
        run: |
          rm -rf .yarn/cache .yarn/unplugged .yarn/install-state.gz
          yarn cache clean --all

      - name: Install dependencies
        run: yarn install

      # 설치 후 vite 확인 (디버깅용)
      - name: Verify vite installation
        run: |
          echo "=== Checking vite ==="
          yarn why vite
          ls -la node_modules/vite || echo "vite not in node_modules"

      - name: Run ESLint
        run: yarn lint

      - name: Run type check
        run: yarn tsc --noEmit

      - name: Run tests
        run: yarn test:run
        env:
          NODE_ENV: test
          CI: true
        timeout-minutes: 10

      - name: Build application
        run: yarn build

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Set Yarn Version
        run: corepack prepare yarn@stable --activate

      - name: Clean Yarn cache
        run: |
          rm -rf .yarn/cache .yarn/unplugged .yarn/install-state.gz
          yarn cache clean --all

      - name: Install dependencies
        run: yarn install

      - name: Run tests with coverage
        run: yarn test:coverage
